name: Deploy Frontend to EC2

on:
  push:
    branches: [ main ] # or a different branch if you prefer

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
      # í³¥ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # í·¹ Cache npm modules (optional)
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # í°³ Build & push frontend Docker image
      - name: Build & Push Frontend Docker image
        run: |
          cd webapp
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ecommerce-frontend .
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/ecommerce-frontend

      # íº€ SSH into EC2 & deploy
      - name: SSH & Deploy Frontend on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/ecommerce-frontend
            docker stop ecommerce-frontend || true
            docker rm ecommerce-frontend || true
            docker run -d -p 80:80 --name ecommerce-frontend ${{ secrets.DOCKER_USERNAME }}/ecommerce-frontend
